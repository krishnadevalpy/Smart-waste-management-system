#include <Servo.h>
#include <ESP8266WiFi.h>
const char* THINGSPEAK_SERVER= "api.thingspeak.com";
String THINGSPEAK_API_KEY ="XXXXXXXXXXXXXXXX";
const char* WIFI_ID = "XXXX"; // WIFI network ID
const char* WIFI_PWD= "XXXX"; //WIFI password
WiFiClient myclient;
WiFiServer myserver(80);
long time1,time2;
int distance1,distance2;
Servo myservo;
const int IR = D3;                     // output from IR sensor
const int trigger1 = D5;               // Trigger to Ultrasonic sensor in bin 1
const int echo1 = D6;                  // Echo from Ultrasonic sensor in bin 1
const int trigger2 = D7;               // Trigger to Ultrasonic sensor in bin 2
const int echo2 = D8;                  // Echo from Ultrasonic sensor in bin 2
void Wifi_connection()
{
Serial.print("Trying to establish connection "+ *WIFI_ID );
WiFi.begin(WIFI_ID , WIFI_PWD);
while (WiFi.status() != WL_CONNECTED)
{
delay(1000);
Serial.print(".");
}
Serial.println("");
Serial.println("WiFi Connected successfully.");
Serial.println("");
server.begin();
Serial.println("Server started");
Serial.print("Use this URL to connect: ");
Serial.print("http://");
Serial.print(WiFi.localIP());
Serial.println("/");
}
void setup()
{
Serial.begin(9600);
myservo.attach(D1);                           //attaches servo pin to D1 of nodemcu
myservo.write(90);
delay(100);
connectWifi();
myservo.attach(D1);
pinMode(trigger1, OUTPUT);                    // Sets the trigger1 as Output
pinMode(echo1, INPUT);                        // Sets the echo1 as Input
pinMode(trigger2, OUTPUT);                    // Sets the trigger2 as Output
pinMode(echo2, INPUT);                        // Sets the echo2 as Input
pinMode(IR,INPUT);                            // Sets the IR pin as Output
}
void loop()
{
int moisture = analogRead(A0);                //reading value from moisture sensor
Serial.print("Water_Value: ");
Serial.println(moisture );
//checking values of moisture and IR sensors.
// Condition for dry waste.
if(digitalRead(IR)==LOW && moisture >=1024)
{
myservo.write(180);
Serial.println(" dry ");
delay(2000);
myservo.write(90);
delay(2000);
}
//condition for wet waste.
else if(digitalRead(IR)==LOW && moisture <1024)
{
myservo.write(0);
Serial.println(" wet ");
delay(2000);
myservo.write(90);
delay(2000);
}
digitalWrite(trigger1, LOW);
delayMicroseconds(2);
digitalWrite(trigger1, HIGH);
delayMicroseconds(10);
digitalWrite(trigger1, LOW);
time1= pulseIn(echo1, HIGH);
distance1 = time1*0.034/2;                      // indicator of space left in bin 1
Serial.print("Distance_1: ");
Serial.println(distance1);
delay(1000);
digitalWrite(trigger2, LOW);
delayMicroseconds(2);
digitalWrite(trigger2, HIGH);
delayMicroseconds(10);
digitalWrite(trigger2, LOW);
time2 = pulseIn(echo2, HIGH);
distance2 = time2*0.034/2;
Serial.print("Distance_2: ");                   // indicator of space left in bin 2
Serial.println(distance2);
Serial.print("Water_Value: ");
Serial.println(moisture);
if (myclient.connect(THINGSPEAK_SERVER, 80))
{
String postStr = THINGSPEAK_API_KEY;
postStr += "&field1=";
postStr += String(distance1);
postStr += "&field2=";
postStr += String(distance2);
postStr += "\r\n\r\n";
myclient.print("POST /update HTTP/1.1\n");
myclient.print("Host: api.thingspeak.com\n");
myclient.print("Connection: close\n");
myclient.print(" X-THINGSPEAKAPIKEY :"+ THINGSPEAK_API_KEY
+ "\n");
myclient.print("Content-Type: application/x-www-form-urlencoded\n");
myclient.print("Content-Length: ");
myclient.print(postStr.length());
myclient.print("\n\n");
myclient.print(postStr);
delay(100);
}
myclient.stop();
delay(3000);
}
